version: '3'
volumes:
  nginx-certs:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/srv/gitlab-nginx/nginx/certs'
  nginx-vhost:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/srv/gitlab-nginx/nginx/vhost'
  nginx-html:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/srv/gitlab-nginx/nginx/html'
  gitlab-config:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/srv/gitlab-nginx/gitlab/config'
  gitlab-logs:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/srv/gitlab-nginx/gitlab/logs'
  gitlab-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/srv/gitlab-nginx/gitlab/data'
  volumerize-backup:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/srv/gitlab-nginx/volumerize/backup'
  volumerize-cache:


services: 
  nginx-proxy:
    container_name: nginx-proxy
    image: 'jwilder/nginx-proxy'
    #restart: no
    ports: 
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx-certs:/etc/nginx/certs:ro
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
    labels:
      - 'com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy'

  nginx-proxy-letsencrypt:
    container_name: nginx-proxy-letsencrypt
    image: 'jrcs/letsencrypt-nginx-proxy-companion'
    depends_on: 
      - 'nginx-proxy'
    #restart: no
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx-certs:/etc/nginx/certs
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html

  gitlab:
    container_name: gitlab
    image: 'gitlab/gitlab-ce:latest'
    #restart: no
    depends_on:
      - 'nginx-proxy-letsencrypt'
    hostname: 'gitlab.renz.cloud'
    environment: 
      VIRTUAL_HOST: 'gitlab.renz.cloud'
      LETSENCRYPT_HOST: 'gitlab.renz.cloud'
      LETSENCRYPT_EMAIL: 'crypto@renz.cloud'
      GITLAB_OMNIBUS_CONFIG: |-
        external_url 'https://gitlab.renz.cloud'
        nginx['listen_port'] = 80
        nginx['listen_https'] = false
        gitlab_rails['smtp_enable'] = true
        gitlab_rails['smtp_address'] = "smtp.strato.de"
        gitlab_rails['smtp_port'] = 465
        gitlab_rails['smtp_user_name'] = "gitlab@renz.cloud"
        gitlab_rails['smtp_password'] = ${GITLAB_STRATO_SMTP_PW}
        gitlab_rails['smtp_domain'] = "renz.cloud"
        gitlab_rails['smtp_authentication'] = "login"
        gitlab_rails['smtp_enable_starttls_auto'] = true
        gitlab_rails['smtp_tls'] = true
        gitlab_rails['smtp_openssl_verify_mode'] = 'none'
        gitlab_rails['gitlab_email_from'] = 'gitlab@renz.cloud'
        gitlab_rails['gitlab_email_reply_to'] = 'gitlab@renz.cloud'
       # Add any other gitlab.rb configuration here, each on its own line
    #environment:
      
    expose:
      - '80'
  #  - '443' # not needed, nginx-proxy talks to this container without SSL on port 80
  #  - '22'
    volumes:
      - gitlab-config:/etc/gitlab
      - gitlab-logs:/var/log/gitlab
      - gitlab-data:/var/opt/gitlab

  volumerize:
    container_name: volumerize
    image: 'blacklabelops/volumerize'
    #restart: no #needed for backup
    depends_on:
      - 'gitlab'
    environment:
      - VOLUMERIZE_SOURCE=/source
      - VOLUMERIZE_TARGET=file:///backup
      - VOLUMERIZE_CONTAINERS=nginx-proxy nginx-proxy-letsencrypt gitlab
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - volumerize-backup:/backup
      - nginx-certs:/source/nginx-certs:ro
      - nginx-vhost:/source/nginx-vhost:ro
      - nginx-html:/source/nginx-certs:ro
      - gitlab-config:/source/gitlab-config:ro
      - gitlab-logs:/source/gitlab-logs:ro
      - gitlab-data:/source/gitlab-data:ro